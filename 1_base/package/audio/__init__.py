# python __all__

# __all__ 是Python中的一个特殊变量，用于定义模块中可以被公开导入的接口。‌
# 当使用from module import *语句导入一个模块时，只有__all__列表中指定的对象会被导入。
# 如果没有定义__all__，则导入模块中所有非以下划线_开头的对象。‌

# 使用场景和作用
# (1)控制导入的接口‌：
# all__变量定义了模块中可以被其他模块导入的公共接口。
# 它是一个包含字符串的列表，指定了模块中可以被其他模块导入的对象。
# 通过定义__all，模块作者可以明确控制哪些符号是公开的，哪些是私有的，避免不必要的导入和暴露。
# (2)‌避免命名空间污染‌：
# 使用from module import *导入模块时，如果没有定义__all__，会导入模块中所有非以下划线开头的名称，
# 这可能导致命名空间的污染。定义了__all__后，只有列表中的对象会被导入，避免了不必要的符号被导入。
# (3)‌代码清晰和维护‌：通过明确指定模块的公共API，__all__有助于保持代码的清晰和维护。
# 它提供了一种方式来明确模块的API，帮助开发者理解模块的功能和接口。


# audio 是包(包含 __init__.py)
# codec/decode/encode 都是模块

# ??????
# 为什么其他模块中的类任然可以使用
__all__ = ['codec', 'decode', 'encode']